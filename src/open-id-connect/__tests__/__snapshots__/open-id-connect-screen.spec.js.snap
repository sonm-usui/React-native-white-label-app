// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OpenIdConnectScreen /> should match in fail state 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                nativeID="animatedComponent"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        forwardedRef={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": -270,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "justifyContent": "space-between",
                            "minHeight": "30%",
                            "paddingHorizontal": "3%",
                          }
                        }
                      >
                        <View
                          bg="tertiary"
                          center={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#ffffff",
                              "justifyContent": "center",
                              "marginVertical": "5%",
                            }
                          }
                        >
                          <View
                            style={Object {}}
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "aspectRatio": 1,
                                  },
                                  undefined,
                                  Array [
                                    Object {
                                      "height": 50,
                                      "width": 50,
                                    },
                                  ],
                                ]
                              }
                            >
                              <View
                                autoPlay={true}
                                collapsable={false}
                                enableMergePathsAndroidForKitKatAndAbove={false}
                                forwardedRef={[Function]}
                                loop={false}
                                nativeID="animatedComponent"
                                onAnimationFinish={[Function]}
                                onLayout={[Function]}
                                progress={0}
                                resizeMode="contain"
                                sourceJson="{\\"v\\":\\"5.4.4\\",\\"fr\\":60,\\"ip\\":0,\\"op\\":89,\\"w\\":100,\\"h\\":100,\\"nm\\":\\"Fail\\",\\"ddd\\":0,\\"assets\\":[],\\"layers\\":[{\\"ddd\\":0,\\"ind\\":1,\\"ty\\":3,\\"nm\\":\\"▽ Group 6\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[50,50,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[42,42,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100,100],\\"ix\\":6}},\\"ao\\":0,\\"ip\\":0,\\"op\\":3600,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":2,\\"ty\\":4,\\"nm\\":\\"Combined Shape\\",\\"parent\\":1,\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[41.953,42,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0,0],\\"ix\\":1},\\"s\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.833,0.833,0.833],\\"y\\":[0.833,0.833,0.833]},\\"o\\":{\\"x\\":[0.167,0.167,0.167],\\"y\\":[0.167,0.167,0.167]},\\"t\\":29,\\"s\\":[100,100,100],\\"e\\":[110,110,100]},{\\"i\\":{\\"x\\":[0.833,0.833,0.833],\\"y\\":[0.833,0.833,0.833]},\\"o\\":{\\"x\\":[0.167,0.167,0.167],\\"y\\":[0.167,0.167,0.167]},\\"t\\":35,\\"s\\":[110,110,100],\\"e\\":[100,100,100]},{\\"t\\":41}],\\"ix\\":6}},\\"ao\\":0,\\"shapes\\":[{\\"ty\\":\\"gr\\",\\"it\\":[{\\"ind\\":0,\\"ty\\":\\"sh\\",\\"ix\\":1,\\"ks\\":{\\"a\\":0,\\"k\\":{\\"i\\":[[0,0],[0,0]],\\"o\\":[[0,0],[0,0]],\\"v\\":[[-6.977,7],[6.973,-7]],\\"c\\":false},\\"ix\\":2},\\"nm\\":\\"Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Group\\",\\"hd\\":false},{\\"ty\\":\\"gr\\",\\"it\\":[{\\"ind\\":0,\\"ty\\":\\"sh\\",\\"ix\\":1,\\"ks\\":{\\"a\\":0,\\"k\\":{\\"i\\":[[0,0],[0,0]],\\"o\\":[[0,0],[0,0]],\\"v\\":[[-6.977,7],[6.973,-7]],\\"c\\":false},\\"ix\\":2},\\"nm\\":\\"Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Group\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":-90,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Group 1\\",\\"np\\":1,\\"cix\\":2,\\"bm\\":0,\\"ix\\":2,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false},{\\"ty\\":\\"mm\\",\\"mm\\":2,\\"nm\\":\\"Merge Paths 1\\",\\"mn\\":\\"ADBE Vector Filter - Merge\\",\\"hd\\":false},{\\"ty\\":\\"st\\",\\"c\\":{\\"a\\":0,\\"k\\":[1,1,1,1],\\"ix\\":3},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":4},\\"w\\":{\\"a\\":0,\\"k\\":4,\\"ix\\":5},\\"lc\\":2,\\"lj\\":2,\\"bm\\":0,\\"nm\\":\\"Stroke 1\\",\\"mn\\":\\"ADBE Vector Graphic - Stroke\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[200,200],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Combined Shape\\",\\"np\\":4,\\"cix\\":2,\\"bm\\":0,\\"ix\\":1,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false},{\\"ty\\":\\"tm\\",\\"s\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.833],\\"y\\":[0.833]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"t\\":28,\\"s\\":[80],\\"e\\":[0]},{\\"t\\":42}],\\"ix\\":1},\\"e\\":{\\"a\\":0,\\"k\\":80,\\"ix\\":2},\\"o\\":{\\"a\\":0,\\"k\\":40,\\"ix\\":3},\\"m\\":1,\\"ix\\":2,\\"nm\\":\\"Trim Paths 1\\",\\"mn\\":\\"ADBE Vector Filter - Trim\\",\\"hd\\":false}],\\"ip\\":0,\\"op\\":3600,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":3,\\"ty\\":4,\\"nm\\":\\"Rectangle 6 Copy\\",\\"parent\\":1,\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[42,42,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0,0],\\"ix\\":1},\\"s\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.833,0.833,0.833],\\"y\\":[0.833,0.833,0.833]},\\"o\\":{\\"x\\":[0.167,0.167,0.167],\\"y\\":[0.167,0.167,0.167]},\\"t\\":12,\\"s\\":[100,100,100],\\"e\\":[110,110,100]},{\\"i\\":{\\"x\\":[0.833,0.833,0.833],\\"y\\":[0.833,0.833,0.833]},\\"o\\":{\\"x\\":[0.167,0.167,0.167],\\"y\\":[0.167,0.167,0.167]},\\"t\\":18,\\"s\\":[110,110,100],\\"e\\":[100,100,100]},{\\"t\\":24}],\\"ix\\":6}},\\"ao\\":0,\\"shapes\\":[{\\"ty\\":\\"gr\\",\\"it\\":[{\\"ty\\":\\"rc\\",\\"d\\":1,\\"s\\":{\\"a\\":0,\\"k\\":[42,42],\\"ix\\":2},\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":21,\\"ix\\":4},\\"nm\\":\\"Rectangle Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Rect\\",\\"hd\\":false},{\\"ty\\":\\"tm\\",\\"s\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":1},\\"e\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.833],\\"y\\":[0.833]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"t\\":0,\\"s\\":[0],\\"e\\":[100]},{\\"t\\":12}],\\"ix\\":2},\\"o\\":{\\"a\\":0,\\"k\\":-90,\\"ix\\":3},\\"m\\":1,\\"ix\\":2,\\"nm\\":\\"Trim Paths 1\\",\\"mn\\":\\"ADBE Vector Filter - Trim\\",\\"hd\\":false},{\\"ty\\":\\"st\\",\\"c\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.833],\\"y\\":[0.833]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"t\\":16,\\"s\\":[0.792938113213,0.722438514233,0.722438514233,1],\\"e\\":[0.803921580315,0.313725501299,0.313725501299,1]},{\\"t\\":24}],\\"ix\\":3},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":4},\\"w\\":{\\"a\\":0,\\"k\\":2,\\"ix\\":5},\\"lc\\":2,\\"lj\\":1,\\"ml\\":4,\\"bm\\":0,\\"nm\\":\\"Stroke 1\\",\\"mn\\":\\"ADBE Vector Graphic - Stroke\\",\\"hd\\":false},{\\"ty\\":\\"fl\\",\\"c\\":{\\"a\\":0,\\"k\\":[0.805166006088,0.31542301178,0.31542301178,1],\\"ix\\":4},\\"o\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.833],\\"y\\":[0.833]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"t\\":19,\\"s\\":[0],\\"e\\":[100]},{\\"t\\":24}],\\"ix\\":5},\\"r\\":1,\\"bm\\":0,\\"nm\\":\\"Fill 1\\",\\"mn\\":\\"ADBE Vector Graphic - Fill\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[200,200],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Rectangle 6 Copy\\",\\"np\\":4,\\"cix\\":2,\\"bm\\":0,\\"ix\\":1,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false}],\\"ip\\":0,\\"op\\":3600,\\"st\\":0,\\"bm\\":0}],\\"markers\\":[]}"
                                speed={1}
                                style={
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 50,
                                    "width": 50,
                                  }
                                }
                              />
                            </View>
                          </View>
                          <Text
                            allowFontScaling={false}
                            style={
                              Array [
                                Object {
                                  "fontSize": 19,
                                },
                                Object {
                                  "fontFamily": "System",
                                },
                                Object {},
                                null,
                                Object {
                                  "textAlign": "center",
                                },
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                Object {
                                  "color": "#EB9B2D",
                                },
                                Object {
                                  "marginTop": "5%",
                                },
                              ]
                            }
                            suppressHighlighting={true}
                          >
                            Error occurred
                          </Text>
                        </View>
                        <RCTSafeAreaView
                          emulateUnlessSupported={true}
                          safeArea={true}
                          style={Object {}}
                        >
                          <View
                            row={true}
                            style={
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "flexWrap": "wrap",
                                "justifyContent": "space-around",
                                "marginVertical": "3%",
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                  "marginRight": "3%",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "borderRadius": 3,
                                    "marginLeft": 0,
                                    "marginRight": 0,
                                    "overflow": "hidden",
                                  }
                                }
                              >
                                <View
                                  accessibilityLabel="open-id-no"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    Object {
                                      "busy": false,
                                      "disabled": false,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  nativeID="animatedComponent"
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "borderColor": "#01C8A1",
                                      "borderWidth": 0.5,
                                      "opacity": 1,
                                    }
                                  }
                                  testID="open-id-no"
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#ffffff",
                                        "borderColor": "#01C8A1",
                                        "borderRadius": 3,
                                        "borderWidth": 0.5,
                                        "color": "#777777",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "padding": 8,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    <Text
                                      style={
                                        Object {
                                          "color": "white",
                                          "fontSize": 18,
                                          "paddingBottom": 1,
                                          "paddingTop": 2,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      Cancel
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "borderRadius": 3,
                                    "marginLeft": 0,
                                    "marginRight": 0,
                                    "overflow": "hidden",
                                  }
                                }
                              >
                                <View
                                  accessibilityLabel="open-id-yes"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    Object {
                                      "busy": false,
                                      "disabled": false,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  nativeID="animatedComponent"
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "borderColor": "#01C8A1",
                                      "borderWidth": 0.5,
                                      "opacity": 1,
                                    }
                                  }
                                  testID="open-id-yes"
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#01C8A1",
                                        "borderColor": "#01C8A1",
                                        "borderRadius": 3,
                                        "borderWidth": 0.5,
                                        "color": "#ffffff",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "padding": 8,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    <Text
                                      style={
                                        Object {
                                          "color": "white",
                                          "fontSize": 18,
                                          "paddingBottom": 1,
                                          "paddingTop": 2,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      Retry
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTSafeAreaView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;

exports[`<OpenIdConnectScreen /> should match in progress state 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                nativeID="animatedComponent"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        forwardedRef={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": -270,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        bg="tertiary"
                        center={true}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#ffffff",
                            "justifyContent": "center",
                            "minHeight": "20%",
                          }
                        }
                      >
                        <View
                          center={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                              "justifyContent": "center",
                              "padding": 20,
                            }
                          }
                        >
                          <ActivityIndicator
                            color="#777777"
                            hidesWhenStopped={true}
                            size="large"
                          />
                          <Text
                            allowFontScaling={false}
                            style={
                              Array [
                                Object {
                                  "fontSize": 17,
                                },
                                Object {
                                  "fontFamily": "System",
                                },
                                Object {
                                  "backgroundColor": "#333333",
                                  "color": "#ffffff",
                                },
                                null,
                                Object {
                                  "textAlign": "center",
                                },
                                Object {
                                  "backgroundColor": "transparent",
                                },
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                Object {
                                  "color": "#464646",
                                },
                                Object {
                                  "fontSize": 17,
                                  "fontWeight": "500",
                                  "letterSpacing": -0.42,
                                  "lineHeight": 21,
                                  "marginTop": 20,
                                },
                              ]
                            }
                            suppressHighlighting={true}
                          >
                            Sending...
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;

exports[`<OpenIdConnectScreen /> should match in received state 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                nativeID="animatedComponent"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        forwardedRef={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": -270,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": "3%",
                            },
                          ]
                        }
                      >
                        <View
                          center={true}
                          row={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "maxHeight": 90,
                              "minHeight": 64,
                            }
                          }
                        >
                          <View
                            style={Object {}}
                          >
                            <Image
                              resizeMode="cover"
                              source={
                                Object {
                                  "uri": "https://logourl.com/logo.png",
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "borderRadius": 16,
                                    "borderWidth": 1,
                                    "height": 32,
                                    "width": 32,
                                  },
                                ]
                              }
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "marginLeft": "5%",
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              numberOfLines={2}
                              style={
                                Array [
                                  Object {
                                    "fontSize": 17,
                                  },
                                  Object {
                                    "fontFamily": "System",
                                  },
                                  Object {},
                                  Object {
                                    "fontWeight": "bold",
                                  },
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  Object {
                                    "color": "#EB9B2D",
                                  },
                                ]
                              }
                              suppressHighlighting={true}
                            >
                              senderName
                            </Text>
                          </View>
                        </View>
                        <View
                          bg="tertiary"
                          center={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#ffffff",
                              "height": 162,
                              "justifyContent": "center",
                            }
                          }
                        >
                          <Text
                            allowFontScaling={false}
                            style={
                              Array [
                                Object {
                                  "fontSize": 17,
                                },
                                Object {
                                  "fontFamily": "System",
                                },
                                Object {},
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                Object {
                                  "color": "#EB9B2D",
                                },
                              ]
                            }
                            suppressHighlighting={true}
                          >
                            Are you trying to login to 192.168.1.4?
                          </Text>
                        </View>
                        <RCTSafeAreaView
                          emulateUnlessSupported={true}
                          safeArea={true}
                          style={Object {}}
                        >
                          <View
                            row={true}
                            style={
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "flexWrap": "wrap",
                                "justifyContent": "space-around",
                                "marginVertical": "3%",
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                  "marginRight": "3%",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "borderRadius": 3,
                                    "marginLeft": 0,
                                    "marginRight": 0,
                                    "overflow": "hidden",
                                  }
                                }
                              >
                                <View
                                  accessibilityLabel="open-id-no"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    Object {
                                      "busy": false,
                                      "disabled": false,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  nativeID="animatedComponent"
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "borderColor": "#01C8A1",
                                      "borderWidth": 0.5,
                                      "opacity": 1,
                                    }
                                  }
                                  testID="open-id-no"
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#ffffff",
                                        "borderColor": "#01C8A1",
                                        "borderRadius": 3,
                                        "borderWidth": 0.5,
                                        "color": "#777777",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "padding": 8,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    <Text
                                      style={
                                        Object {
                                          "color": "white",
                                          "fontSize": 18,
                                          "paddingBottom": 1,
                                          "paddingTop": 2,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      No
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "borderRadius": 3,
                                    "marginLeft": 0,
                                    "marginRight": 0,
                                    "overflow": "hidden",
                                  }
                                }
                              >
                                <View
                                  accessibilityLabel="open-id-yes"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    Object {
                                      "busy": false,
                                      "disabled": false,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  nativeID="animatedComponent"
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "borderColor": "#01C8A1",
                                      "borderWidth": 0.5,
                                      "opacity": 1,
                                    }
                                  }
                                  testID="open-id-yes"
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#01C8A1",
                                        "borderColor": "#01C8A1",
                                        "borderRadius": 3,
                                        "borderWidth": 0.5,
                                        "color": "#ffffff",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "padding": 8,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    <Text
                                      style={
                                        Object {
                                          "color": "white",
                                          "fontSize": 18,
                                          "paddingBottom": 1,
                                          "paddingTop": 2,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      Yes
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTSafeAreaView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;

exports[`<OpenIdConnectScreen /> should match in signature verification failed 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                nativeID="animatedComponent"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        forwardedRef={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": -270,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": "3%",
                            },
                          ]
                        }
                      >
                        <View
                          center={true}
                          row={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "maxHeight": 90,
                              "minHeight": 64,
                            }
                          }
                        >
                          <View
                            style={Object {}}
                          >
                            <Image
                              resizeMode="cover"
                              source={
                                Object {
                                  "uri": "https://logourl.com/logo.png",
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "borderRadius": 16,
                                    "borderWidth": 1,
                                    "height": 32,
                                    "width": 32,
                                  },
                                ]
                              }
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "marginLeft": "5%",
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              numberOfLines={2}
                              style={
                                Array [
                                  Object {
                                    "fontSize": 17,
                                  },
                                  Object {
                                    "fontFamily": "System",
                                  },
                                  Object {},
                                  Object {
                                    "fontWeight": "bold",
                                  },
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  Object {
                                    "color": "#EB9B2D",
                                  },
                                ]
                              }
                              suppressHighlighting={true}
                            >
                              senderName
                            </Text>
                          </View>
                        </View>
                        <View
                          bg="tertiary"
                          center={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#ffffff",
                              "height": 162,
                              "justifyContent": "center",
                            }
                          }
                        >
                          <Text
                            allowFontScaling={false}
                            style={
                              Array [
                                Object {
                                  "fontSize": 19,
                                },
                                Object {
                                  "fontFamily": "System",
                                },
                                Object {},
                                null,
                                Object {
                                  "textAlign": "center",
                                },
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                Object {
                                  "color": "#EB9B2D",
                                },
                                Object {
                                  "color": "#CE0B24",
                                  "marginBottom": "3%",
                                },
                              ]
                            }
                            suppressHighlighting={true}
                          >
                            AppName is unable to verify that this request really comes from senderName
                          </Text>
                          <Text
                            allowFontScaling={false}
                            style={
                              Array [
                                Object {
                                  "fontSize": 17,
                                },
                                Object {
                                  "fontFamily": "System",
                                },
                                Object {},
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null,
                                Object {
                                  "color": "#EB9B2D",
                                },
                              ]
                            }
                            suppressHighlighting={true}
                          >
                            Approve login to 192.168.1.4 anyway?
                          </Text>
                        </View>
                        <RCTSafeAreaView
                          emulateUnlessSupported={true}
                          safeArea={true}
                          style={Object {}}
                        >
                          <View
                            row={true}
                            style={
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "flexWrap": "wrap",
                                "justifyContent": "space-around",
                                "marginVertical": "3%",
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                  "marginRight": "3%",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "borderRadius": 3,
                                    "marginLeft": 0,
                                    "marginRight": 0,
                                    "overflow": "hidden",
                                  }
                                }
                              >
                                <View
                                  accessibilityLabel="open-id-no"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    Object {
                                      "busy": false,
                                      "disabled": false,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  nativeID="animatedComponent"
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "borderColor": "#01C8A1",
                                      "borderWidth": 0.5,
                                      "opacity": 1,
                                    }
                                  }
                                  testID="open-id-no"
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#ffffff",
                                        "borderColor": "#01C8A1",
                                        "borderRadius": 3,
                                        "borderWidth": 0.5,
                                        "color": "#777777",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "padding": 8,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    <Text
                                      style={
                                        Object {
                                          "color": "white",
                                          "fontSize": 18,
                                          "paddingBottom": 1,
                                          "paddingTop": 2,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      No
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "borderRadius": 3,
                                    "marginLeft": 0,
                                    "marginRight": 0,
                                    "overflow": "hidden",
                                  }
                                }
                              >
                                <View
                                  accessibilityLabel="open-id-yes"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    Object {
                                      "busy": false,
                                      "disabled": false,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  nativeID="animatedComponent"
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "borderColor": "#01C8A1",
                                      "borderWidth": 0.5,
                                      "opacity": 1,
                                    }
                                  }
                                  testID="open-id-yes"
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#01C8A1",
                                        "borderColor": "#01C8A1",
                                        "borderRadius": 3,
                                        "borderWidth": 0.5,
                                        "color": "#ffffff",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "padding": 8,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    <Text
                                      style={
                                        Object {
                                          "color": "white",
                                          "fontSize": 18,
                                          "paddingBottom": 1,
                                          "paddingTop": 2,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      Yes
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTSafeAreaView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;

exports[`<OpenIdConnectScreen /> should match in success state 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                nativeID="animatedComponent"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        forwardedRef={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": -270,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        bg="tertiary"
                        center={true}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#ffffff",
                            "justifyContent": "center",
                            "minHeight": "20%",
                          }
                        }
                      >
                        <View
                          style={Object {}}
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "aspectRatio": 1,
                                },
                                undefined,
                                Array [
                                  Object {
                                    "height": 50,
                                    "width": 50,
                                  },
                                ],
                              ]
                            }
                          >
                            <View
                              autoPlay={true}
                              collapsable={false}
                              enableMergePathsAndroidForKitKatAndAbove={false}
                              forwardedRef={[Function]}
                              loop={false}
                              nativeID="animatedComponent"
                              onAnimationFinish={[Function]}
                              onLayout={[Function]}
                              progress={0}
                              resizeMode="contain"
                              sourceJson="{\\"v\\":\\"5.0.1\\",\\"fr\\":30,\\"ip\\":0,\\"op\\":30,\\"w\\":512,\\"h\\":512,\\"nm\\":\\"Comp 1\\",\\"ddd\\":0,\\"assets\\":[{\\"id\\":\\"comp_0\\",\\"layers\\":[{\\"ddd\\":0,\\"ind\\":1,\\"ty\\":4,\\"nm\\":\\"Shape Layer 1\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.572],\\"y\\":[0.556]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"n\\":[\\"0p572_0p556_0p167_0p167\\"],\\"t\\":7,\\"s\\":[100],\\"e\\":[92.154]},{\\"i\\":{\\"x\\":[0.833],\\"y\\":[0.833]},\\"o\\":{\\"x\\":[0.641],\\"y\\":[0.056]},\\"n\\":[\\"0p833_0p833_0p641_0p056\\"],\\"t\\":13,\\"s\\":[92.154],\\"e\\":[30]},{\\"t\\":17.0000006924242}],\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100,100],\\"ix\\":6}},\\"ao\\":0,\\"shapes\\":[{\\"ty\\":\\"gr\\",\\"it\\":[{\\"ind\\":0,\\"ty\\":\\"sh\\",\\"ix\\":1,\\"ks\\":{\\"a\\":0,\\"k\\":{\\"i\\":[[0,0],[0,0]],\\"o\\":[[0,0],[0,0]],\\"v\\":[[-230,4],[214,4]],\\"c\\":false},\\"ix\\":2},\\"nm\\":\\"Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Group\\",\\"hd\\":false},{\\"ty\\":\\"st\\",\\"c\\":{\\"a\\":0,\\"k\\":[0.5254901960784314,0.7254901960784313,0.23137254901960785,1],\\"ix\\":3},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":4},\\"w\\":{\\"a\\":0,\\"k\\":70,\\"ix\\":5},\\"lc\\":2,\\"lj\\":1,\\"ml\\":4,\\"nm\\":\\"Stroke 1\\",\\"mn\\":\\"ADBE Vector Graphic - Stroke\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Shape 1\\",\\"np\\":2,\\"cix\\":2,\\"ix\\":1,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false},{\\"ty\\":\\"tm\\",\\"s\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.588],\\"y\\":[-51709.363]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"n\\":[\\"0p588_-51709p363_0p167_0p167\\"],\\"t\\":7,\\"s\\":[0],\\"e\\":[0]},{\\"i\\":{\\"x\\":[0.696],\\"y\\":[0.999]},\\"o\\":{\\"x\\":[0.509],\\"y\\":[0.003]},\\"n\\":[\\"0p696_0p999_0p509_0p003\\"],\\"t\\":10,\\"s\\":[0],\\"e\\":[100]},{\\"t\\":16.0000006516934}],\\"ix\\":1},\\"e\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.566],\\"y\\":[0.999]},\\"o\\":{\\"x\\":[0.457],\\"y\\":[0.063]},\\"n\\":[\\"0p566_0p999_0p457_0p063\\"],\\"t\\":7,\\"s\\":[0],\\"e\\":[100]},{\\"t\\":16.0000006516934}],\\"ix\\":2},\\"o\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":3},\\"m\\":1,\\"ix\\":2,\\"nm\\":\\"Trim Paths 1\\",\\"mn\\":\\"ADBE Vector Filter - Trim\\",\\"hd\\":false}],\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0}]},{\\"id\\":\\"comp_1\\",\\"layers\\":[{\\"ddd\\":0,\\"ind\\":1,\\"ty\\":4,\\"nm\\":\\"Shape Layer 1\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100,100],\\"ix\\":6}},\\"ao\\":0,\\"shapes\\":[{\\"ty\\":\\"gr\\",\\"it\\":[{\\"d\\":1,\\"ty\\":\\"el\\",\\"s\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0,0],\\"y\\":[0.997,0.997]},\\"o\\":{\\"x\\":[0.167,0.167],\\"y\\":[0.167,0.167]},\\"n\\":[\\"0_0p997_0p167_0p167\\",\\"0_0p997_0p167_0p167\\"],\\"t\\":24,\\"s\\":[40,40],\\"e\\":[90,90]},{\\"i\\":{\\"x\\":[0.833,0.833],\\"y\\":[0.833,0.833]},\\"o\\":{\\"x\\":[0.574,0.574],\\"y\\":[-0.004,-0.004]},\\"n\\":[\\"0p833_0p833_0p574_-0p004\\",\\"0p833_0p833_0p574_-0p004\\"],\\"t\\":27,\\"s\\":[90,90],\\"e\\":[18.394,18.394]},{\\"t\\":38.0000015477717}],\\"ix\\":2},\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":3},\\"nm\\":\\"Ellipse Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Ellipse\\",\\"hd\\":false},{\\"ty\\":\\"fl\\",\\"c\\":{\\"a\\":0,\\"k\\":[1,1,1,1],\\"ix\\":4},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":5},\\"r\\":1,\\"nm\\":\\"Fill 1\\",\\"mn\\":\\"ADBE Vector Graphic - Fill\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":0.667,\\"y\\":1},\\"o\\":{\\"x\\":0.167,\\"y\\":0.167},\\"n\\":\\"0p667_1_0p167_0p167\\",\\"t\\":24,\\"s\\":[-181.074,-5.414],\\"e\\":[200,-5.414],\\"to\\":[34.0465698242188,0],\\"ti\\":[-26.72825050354,0]},{\\"t\\":38.0000015477717}],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.833],\\"y\\":[0.833]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"n\\":[\\"0p833_0p833_0p167_0p167\\"],\\"t\\":24,\\"s\\":[0],\\"e\\":[100]},{\\"i\\":{\\"x\\":[0.833],\\"y\\":[0.833]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"n\\":[\\"0p833_0p833_0p167_0p167\\"],\\"t\\":25,\\"s\\":[100],\\"e\\":[100]},{\\"i\\":{\\"x\\":[0.833],\\"y\\":[0.833]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"n\\":[\\"0p833_0p833_0p167_0p167\\"],\\"t\\":29,\\"s\\":[100],\\"e\\":[0]},{\\"t\\":38.0000015477717}],\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Ellipse 1\\",\\"np\\":2,\\"cix\\":2,\\"ix\\":1,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false}],\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0}]},{\\"id\\":\\"comp_2\\",\\"layers\\":[{\\"ddd\\":0,\\"ind\\":1,\\"ty\\":4,\\"nm\\":\\"Shape Layer 1\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.572],\\"y\\":[0.556]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"n\\":[\\"0p572_0p556_0p167_0p167\\"],\\"t\\":10,\\"s\\":[100],\\"e\\":[92.154]},{\\"i\\":{\\"x\\":[0.833],\\"y\\":[0.833]},\\"o\\":{\\"x\\":[0.641],\\"y\\":[0.056]},\\"n\\":[\\"0p833_0p833_0p641_0p056\\"],\\"t\\":16,\\"s\\":[92.154],\\"e\\":[30]},{\\"t\\":20.0000008146167}],\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100,100],\\"ix\\":6}},\\"ao\\":0,\\"shapes\\":[{\\"ty\\":\\"gr\\",\\"it\\":[{\\"ind\\":0,\\"ty\\":\\"sh\\",\\"ix\\":1,\\"ks\\":{\\"a\\":0,\\"k\\":{\\"i\\":[[0,0],[0,0]],\\"o\\":[[0,0],[0,0]],\\"v\\":[[-230,4],[214,4]],\\"c\\":false},\\"ix\\":2},\\"nm\\":\\"Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Group\\",\\"hd\\":false},{\\"ty\\":\\"st\\",\\"c\\":{\\"a\\":0,\\"k\\":[0.5254901960784314,0.7254901960784313,0.23137254901960785,1],\\"ix\\":3},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":4},\\"w\\":{\\"a\\":0,\\"k\\":70,\\"ix\\":5},\\"lc\\":2,\\"lj\\":1,\\"ml\\":4,\\"nm\\":\\"Stroke 1\\",\\"mn\\":\\"ADBE Vector Graphic - Stroke\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Shape 1\\",\\"np\\":2,\\"cix\\":2,\\"ix\\":1,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false},{\\"ty\\":\\"tm\\",\\"s\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.588],\\"y\\":[-51709.363]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.167]},\\"n\\":[\\"0p588_-51709p363_0p167_0p167\\"],\\"t\\":10,\\"s\\":[0],\\"e\\":[0]},{\\"i\\":{\\"x\\":[0.696],\\"y\\":[0.999]},\\"o\\":{\\"x\\":[0.509],\\"y\\":[0.003]},\\"n\\":[\\"0p696_0p999_0p509_0p003\\"],\\"t\\":13,\\"s\\":[0],\\"e\\":[100]},{\\"t\\":19.0000007738859}],\\"ix\\":1},\\"e\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.566],\\"y\\":[0.999]},\\"o\\":{\\"x\\":[0.457],\\"y\\":[0.063]},\\"n\\":[\\"0p566_0p999_0p457_0p063\\"],\\"t\\":10,\\"s\\":[0],\\"e\\":[100]},{\\"t\\":19.0000007738859}],\\"ix\\":2},\\"o\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":3},\\"m\\":1,\\"ix\\":2,\\"nm\\":\\"Trim Paths 1\\",\\"mn\\":\\"ADBE Vector Filter - Trim\\",\\"hd\\":false}],\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0}]}],\\"layers\\":[{\\"ddd\\":0,\\"ind\\":1,\\"ty\\":0,\\"nm\\":\\"trait\\",\\"refId\\":\\"comp_0\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":90,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[263.334,471.109,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[15,15,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":2,\\"ty\\":0,\\"nm\\":\\"trait\\",\\"refId\\":\\"comp_0\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":-180,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[51.641000000000005,253.275,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[15,15,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":3,\\"ty\\":0,\\"nm\\":\\"trait\\",\\"refId\\":\\"comp_0\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":-90,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[266.322,44.315,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[15,15,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":4,\\"ty\\":0,\\"nm\\":\\"trait\\",\\"refId\\":\\"comp_0\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[469.91,258.792,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[15,15,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":5,\\"ty\\":0,\\"nm\\":\\"firefly\\",\\"refId\\":\\"comp_1\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":-18.097,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[400.63500000000005,189.708,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[20,20,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":6,\\"ty\\":0,\\"nm\\":\\"firefly\\",\\"refId\\":\\"comp_1\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":-72.471,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[359.413,150.912,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[20,20,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":7,\\"ty\\":0,\\"nm\\":\\"firefly\\",\\"refId\\":\\"comp_1\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":-45.707,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[396.894,150.961,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[30,30,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":8,\\"ty\\":0,\\"nm\\":\\"trait 2\\",\\"refId\\":\\"comp_2\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":-135.205,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[410.865,406.53,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[-19.512,19.512,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":9,\\"ty\\":0,\\"nm\\":\\"trait 2\\",\\"refId\\":\\"comp_2\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":-45.606,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[105.535,402.59800000000007,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[-19.512,19.512,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":10,\\"ty\\":0,\\"nm\\":\\"trait 2\\",\\"refId\\":\\"comp_2\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":-135.205,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[104.864,111.71,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[19.512,19.512,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":11,\\"ty\\":0,\\"nm\\":\\"trait 2\\",\\"refId\\":\\"comp_2\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":-45.606,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[416.7219999999999,113.206,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[19.512,19.512,100],\\"ix\\":6}},\\"ao\\":0,\\"w\\":512,\\"h\\":512,\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":12,\\"ty\\":4,\\"nm\\":\\"Shape Layer 2\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[236.88799999999998,240.25799999999998,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[69.59,69.59,100],\\"ix\\":6}},\\"ao\\":0,\\"shapes\\":[{\\"ty\\":\\"gr\\",\\"it\\":[{\\"ind\\":0,\\"ty\\":\\"sh\\",\\"ix\\":1,\\"ks\\":{\\"a\\":0,\\"k\\":{\\"i\\":[[0,0],[0,0],[0,0]],\\"o\\":[[0,0],[0,0],[0,0]],\\"v\\":[[-76.426,37.999],[12.056,114.074],[169.991,-68.635]],\\"c\\":false},\\"ix\\":2},\\"nm\\":\\"Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Group\\",\\"hd\\":false},{\\"ty\\":\\"st\\",\\"c\\":{\\"a\\":0,\\"k\\":[1,1,1,1],\\"ix\\":3},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":4},\\"w\\":{\\"a\\":0,\\"k\\":35,\\"ix\\":5},\\"lc\\":2,\\"lj\\":1,\\"ml\\":4,\\"nm\\":\\"Stroke 1\\",\\"mn\\":\\"ADBE Vector Graphic - Stroke\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[-7,11],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Shape 1\\",\\"np\\":2,\\"cix\\":2,\\"ix\\":1,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false},{\\"ty\\":\\"tm\\",\\"s\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":1},\\"e\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.833],\\"y\\":[-2.986]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0]},\\"n\\":[\\"0p833_-2p986_0p167_0\\"],\\"t\\":0,\\"s\\":[0],\\"e\\":[0]},{\\"i\\":{\\"x\\":[0],\\"y\\":[0.973]},\\"o\\":{\\"x\\":[0.167],\\"y\\":[0.042]},\\"n\\":[\\"0_0p973_0p167_0p042\\"],\\"t\\":14.791,\\"s\\":[0],\\"e\\":[32]},{\\"i\\":{\\"x\\":[0.833],\\"y\\":[0.833]},\\"o\\":{\\"x\\":[0.828],\\"y\\":[0.011]},\\"n\\":[\\"0p833_0p833_0p828_0p011\\"],\\"t\\":19.791,\\"s\\":[32],\\"e\\":[100]},{\\"t\\":24.7912510097683}],\\"ix\\":2},\\"o\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":3},\\"m\\":1,\\"ix\\":2,\\"nm\\":\\"Trim Paths 1\\",\\"mn\\":\\"ADBE Vector Filter - Trim\\",\\"hd\\":false}],\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":13,\\"ty\\":4,\\"nm\\":\\"Shape Layer 1\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[256,256,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[80,80,100],\\"ix\\":6}},\\"ao\\":0,\\"shapes\\":[{\\"ty\\":\\"gr\\",\\"it\\":[{\\"d\\":1,\\"ty\\":\\"el\\",\\"s\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.976,0.976],\\"y\\":[0.968,0.968]},\\"o\\":{\\"x\\":[0.654,0.654],\\"y\\":[0.007,0.007]},\\"n\\":[\\"0p976_0p968_0p654_0p007\\",\\"0p976_0p968_0p654_0p007\\"],\\"t\\":0,\\"s\\":[0,0],\\"e\\":[401.025,401.025]},{\\"i\\":{\\"x\\":[0.468,0.468],\\"y\\":[1.057,1.057]},\\"o\\":{\\"x\\":[0.346,0.346],\\"y\\":[-4.83,-4.83]},\\"n\\":[\\"0p468_1p057_0p346_-4p83\\",\\"0p468_1p057_0p346_-4p83\\"],\\"t\\":7,\\"s\\":[401.025,401.025],\\"e\\":[372.7,372.7]},{\\"i\\":{\\"x\\":[0.375,0.375],\\"y\\":[1.543,1.543]},\\"o\\":{\\"x\\":[0.364,0.364],\\"y\\":[0.031,0.031]},\\"n\\":[\\"0p375_1p543_0p364_0p031\\",\\"0p375_1p543_0p364_0p031\\"],\\"t\\":12,\\"s\\":[372.7,372.7],\\"e\\":[401.025,401.025]},{\\"i\\":{\\"x\\":[0.833,0.833],\\"y\\":[1,1]},\\"o\\":{\\"x\\":[0.327,0.327],\\"y\\":[-8.038,-8.038]},\\"n\\":[\\"0p833_1_0p327_-8p038\\",\\"0p833_1_0p327_-8p038\\"],\\"t\\":16,\\"s\\":[401.025,401.025],\\"e\\":[401.025,401.025]},{\\"t\\":20.0000008146167}],\\"ix\\":2},\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":3},\\"nm\\":\\"Ellipse Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Ellipse\\",\\"hd\\":false},{\\"ty\\":\\"fl\\",\\"c\\":{\\"a\\":0,\\"k\\":[0.5254901960784314,0.7254901960784313,0.23137254901960785,1],\\"ix\\":4},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":5},\\"r\\":1,\\"nm\\":\\"Fill 1\\",\\"mn\\":\\"ADBE Vector Graphic - Fill\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[5.992,3.49],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Ellipse 1\\",\\"np\\":2,\\"cix\\":2,\\"ix\\":1,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false}],\\"ip\\":0,\\"op\\":150.000006109625,\\"st\\":0,\\"bm\\":0}]}"
                              speed={1}
                              style={
                                Object {
                                  "aspectRatio": 1,
                                  "height": 50,
                                  "width": 50,
                                }
                              }
                            />
                          </View>
                        </View>
                        <Text
                          allowFontScaling={false}
                          style={
                            Array [
                              Object {
                                "fontSize": 19,
                              },
                              Object {
                                "fontFamily": "System",
                              },
                              Object {},
                              null,
                              Object {
                                "textAlign": "center",
                              },
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                              Object {
                                "color": "#EB9B2D",
                              },
                              Object {
                                "marginTop": "5%",
                              },
                              Object {
                                "marginTop": "5%",
                              },
                            ]
                          }
                          suppressHighlighting={true}
                        >
                          Request approved.
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;
