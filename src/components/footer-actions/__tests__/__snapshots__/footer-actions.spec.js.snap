// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FooterActions /> match snapshot when hidePrimary is true 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "bottom",
    ]
  }
  style={
    Object {
      "backgroundColor": "rgba(119, 119, 119, 1.0)",
    }
  }
>
  <View
    fifth={true}
    style={
      Object {
        "backgroundColor": "#ffffff",
      }
    }
  >
    <View
      row={true}
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 3,
              "marginLeft": 0,
              "marginRight": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            accessibilityLabel="test-deny"
            accessibilityRole="button"
            accessibilityState={
              Object {
                "busy": false,
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="test-deny"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "rgba(119, 119, 119, 1.0)",
                  "borderColor": "#2089dc",
                  "borderRadius": 3,
                  "borderWidth": 0,
                  "color": "#ffffff",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 8,
                  "paddingVertical": 17,
                  "textAlign": "center",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontSize": 18,
                    "paddingBottom": 1,
                    "paddingTop": 2,
                    "textAlign": "center",
                  }
                }
              >
                Deny
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;

exports[`<FooterActions /> should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "bottom",
    ]
  }
  style={
    Object {
      "backgroundColor": "rgba(119, 119, 119, 1.0)",
    }
  }
>
  <View
    fifth={true}
    style={
      Object {
        "backgroundColor": "#ffffff",
      }
    }
  >
    <View
      row={true}
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 3,
              "marginLeft": 0,
              "marginRight": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            accessibilityLabel="test-deny"
            accessibilityRole="button"
            accessibilityState={
              Object {
                "busy": false,
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="test-deny"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "rgba(119, 119, 119, 1.0)",
                  "borderColor": "#2089dc",
                  "borderRadius": 3,
                  "borderWidth": 0,
                  "color": "#ffffff",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 8,
                  "paddingVertical": 17,
                  "textAlign": "center",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontSize": 18,
                    "paddingBottom": 1,
                    "paddingTop": 2,
                    "textAlign": "center",
                  }
                }
              >
                Deny
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 3,
              "marginLeft": 0,
              "marginRight": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            accessibilityLabel="test-accept"
            accessibilityRole="button"
            accessibilityState={
              Object {
                "busy": false,
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderColor": "#FFFFFF",
                "borderLeftWidth": 0.5,
                "opacity": 1,
              }
            }
            testID="test-accept"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "rgba(119, 119, 119, 1.0)",
                  "borderColor": "#FFFFFF",
                  "borderLeftWidth": 0.5,
                  "borderRadius": 3,
                  "borderWidth": 0,
                  "color": "#ffffff",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 8,
                  "paddingVertical": 17,
                  "textAlign": "center",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontSize": 18,
                    "paddingBottom": 1,
                    "paddingTop": 2,
                    "textAlign": "center",
                  }
                }
              >
                Connect
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;
